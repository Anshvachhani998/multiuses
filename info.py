import os

class Config:
    # Bot Configuration
    API_ID = int(os.getenv("API_ID", "22141398"))
    API_HASH = os.getenv("API_HASH", "0c8f8bd171e05e42d6f6e5a6f4305389")
    BOT_TOKEN = os.getenv("BOT_TOKEN", "6346317908:AAEEtPcj59TcbUGKLMFLIIeiZFDZFT6Nq40")
    
    # Database Configuration
    MONGO_URI = os.getenv("MONGODB_URI", "mongodb+srv://Ansh089:Ansh089@cluster0.y8tpouc.mongodb.net/?retryWrites=true&w=majority")
    MONGO_NAME = os.getenv("DATABASE_NAME", "MUlTI")
    
    # Channel Configuration
    LOG_CHANNEL = int(os.getenv("LOG_CHANNEL_ID", "-1002858808929")) if os.getenv("LOG_CHANNEL_ID") else None
    MEDIA_CHANNEL = int(os.getenv("MEDIA_CHANNEL_ID", "-1002858808929")) if os.getenv("MEDIA_CHANNEL_ID") else None
    
    # Bot Owner and Admins
    OWNER_ID = int(os.getenv("OWNER_ID", "7744665378"))
    ADMINS = [int(x) for x in os.getenv("ADMINS", "5660839376,6167872503,5961011848,7744665378").split(",") if x.strip().isdigit()]
    if OWNER_ID:
        ADMINS.append(OWNER_ID)
    
    # Credit System
    DEFAULT_CREDITS = int(os.getenv("DEFAULT_CREDITS", "100"))
    PROCESS_COST = int(os.getenv("PROCESS_COST", "10"))
    REFERRAL_BONUS = int(os.getenv("REFERRAL_BONUS", "100"))
    DAILY_LIMIT = int(os.getenv("DAILY_LIMIT", "20"))
    
    # Premium System
    PREMIUM_PRICES = {
        "monthly": {"credits": 4000, "days": 30},
        "yearly": {"credits": 20000, "days": 365}
    }
    
    # File Paths
    DOWNLOADS_DIR = os.getenv("DOWNLOADS_DIR", "downloads")
    UPLOADS_DIR = os.getenv("UPLOADS_DIR", "uploads")
    TEMP_DIR = os.getenv("TEMP_DIR", "temp")
    
    # FFmpeg Configuration
    FFMPEG_PATH = os.getenv("FFMPEG_PATH", "ffmpeg")
    FFPROBE_PATH = os.getenv("FFPROBE_PATH", "ffprobe")
    
    # Bot Messages
    START_MESSAGE = f"""
üé¨ **·¥°·¥á ü·¥Ñ·¥è·¥ç·¥á ·¥õ·¥è ·¥†…™·¥Ö·¥á·¥è ·¥ò Ä·¥è·¥Ñ·¥áss·¥è Ä  ô·¥è·¥õ**

…™ ·¥Ñ·¥Ä…¥  ú·¥á ü·¥ò  è·¥è·¥ú ·¥ò Ä·¥è·¥Ñ·¥áss  è·¥è·¥ú Ä ·¥†…™·¥Ö·¥á·¥ès ·¥°…™·¥õ ú ·¥†·¥Ä Ä…™·¥è·¥ús ·¥è·¥ò·¥õ…™·¥è…¥s!

**·¥Ä·¥†·¥Ä…™ ü·¥Ä ô ü·¥á ·¥ò Ä·¥è·¥Ñ·¥áss…™…¥…¢ ·¥è·¥ò·¥õ…™·¥è…¥s:**
‚Ä¢ ·¥õ Ä…™·¥ç ·¥†…™·¥Ö·¥á·¥è
‚Ä¢ ·¥Ñ·¥è·¥ç·¥ò Ä·¥áss ·¥†…™·¥Ö·¥á·¥è
‚Ä¢  Ä·¥è·¥õ·¥Ä·¥õ·¥á ·¥†…™·¥Ö·¥á·¥è
‚Ä¢ ·¥ç·¥á Ä…¢·¥á ·¥†…™·¥Ö·¥á·¥ès
‚Ä¢ ·¥Ä·¥Ö·¥Ö ·¥°·¥Ä·¥õ·¥á Ä·¥ç·¥Ä Ä·¥ã
‚Ä¢ ·¥ç·¥ú·¥õ·¥á ·¥†…™·¥Ö·¥á·¥è
‚Ä¢  Ä·¥á·¥ò ü·¥Ä·¥Ñ·¥á ·¥Ä·¥ú·¥Ö…™·¥è
‚Ä¢  Ä·¥á·¥†·¥á Äs·¥á ·¥†…™·¥Ö·¥á·¥è
‚Ä¢ ·¥Ä·¥Ö·¥Ö s·¥ú ô·¥õ…™·¥õ ü·¥ás
‚Ä¢ ·¥Ñ ú·¥Ä…¥…¢·¥á  Ä·¥ás·¥è ü·¥ú·¥õ…™·¥è…¥
‚Ä¢ ·¥áx·¥õ Ä·¥Ä·¥Ñ·¥õ ·¥Ä·¥ú·¥Ö…™·¥è
‚Ä¢ ·¥õ·¥Ä·¥ã·¥á s·¥Ñ Ä·¥á·¥á…¥s ú·¥è·¥õ

**·¥á·¥Ä·¥Ñ ú ·¥ò Ä·¥è·¥Ñ·¥áss ·¥Ñ·¥ès·¥õs {PROCESS_COST} ·¥Ñ Ä·¥á·¥Ö…™·¥õs**

s·¥á…¥·¥Ö ·¥ç·¥á ·¥Ä ·¥†…™·¥Ö·¥á·¥è ·¥õ·¥è …¢·¥á·¥õ s·¥õ·¥Ä Ä·¥õ·¥á·¥Ö!
"""
    
    # Create directories if they don't exist
    @classmethod
    def create_directories(cls):
        for dir_path in [cls.DOWNLOADS_DIR, cls.UPLOADS_DIR, cls.TEMP_DIR]:
            os.makedirs(dir_path, exist_ok=True)

# Create directories on import
Config.create_directories()
